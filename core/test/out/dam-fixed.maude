load dam.maude	---Load files containing the original definitions.

***(
	Generated by STRASS -- Daniel Gal√°n <dagapas@vrain.upv.es>, 2021
)

--- Notice: extended by STRASS, not the original definition
mod DAM-PRED is
	protecting DAM .
	including BOOL .
	protecting EXT-BOOL .
	op openSpillways : Spillways -> Nat .
	eq openSpillways(empty) = 0 .
	eq openSpillways(SC:Spillways[S:SpillwayId, O:Aperture]) = if O:Aperture =/= close then 1 + openSpillways(SC:Spillways) else openSpillways(SC:Spillways) fi .
endm

smod DAM-STRAT is
	protecting DAM .
	protecting DAM-PRED .
	strat Aperture : @ Aperture .
	strat Aperture! : @ Aperture .
	strat Aperture* : @ Aperture .
	strat Aperture+ : @ Aperture .
	strat DamState : @ DamState .
	strat DamState! : @ DamState .
	strat DamState* : @ DamState .
	strat DamState+ : @ DamState .
	strat SpillwayId : @ SpillwayId .
	strat SpillwayId! : @ SpillwayId .
	strat SpillwayId* : @ SpillwayId .
	strat SpillwayId+ : @ SpillwayId .
	strat Spillways : @ Spillways .
	strat Spillways! : @ Spillways .
	strat Spillways* : @ Spillways .
	strat Spillways+ : @ Spillways .
	strat State : @ State .
	strat State! : @ State .
	strat State* : @ State .
	strat State+ : @ State .
	strat TimeStamp : @ TimeStamp .
	strat TimeStamp! : @ TimeStamp .
	strat TimeStamp* : @ TimeStamp .
	strat TimeStamp+ : @ TimeStamp .
	strat f0 : @ State .
	strat f1 : @ State .
	strat f2 : @ State .
	strat f3 : @ State .
	sd Aperture := idle .
	sd Aperture! := (all) ! .
	sd Aperture* := (all) * .
	sd Aperture+ := (all) + .
	sd DamState := idle .
	sd DamState! := (all) ! .
	sd DamState* := (all) * .
	sd DamState+ := (all) + .
	sd SpillwayId := idle .
	sd SpillwayId! := (all) ! .
	sd SpillwayId* := (all) * .
	sd SpillwayId+ := (all) + .
	sd Spillways := idle .
	sd Spillways! := (all) ! .
	sd Spillways* := (all) * .
	sd Spillways+ := (all) + .
	sd State := (f0) ; ((f1) ; ((f2) ; (f3))) .
	sd State! := (State) ; (((all) ; (State)) !) .
	sd State* := (State) ; (((all) ; (State)) *) .
	sd State+ := (State) ; (((all) ; (State)) +) .
	sd TimeStamp := idle .
	sd TimeStamp! := (all) ! .
	sd TimeStamp* := (all) * .
	sd TimeStamp+ := (all) + .
	sd f0 := not(amatch {SC:Spillways ; V:Rat ; T:TimeStamp ; AC:Bool} s.t. V:Rat < 50000000 = false) .
	sd f1 := not(amatch {[S1:SpillwayId, O1:Aperture][S2:SpillwayId, O2:Aperture][S3:SpillwayId, O3:Aperture] ; V:Rat ; T:TimeStamp ; AC:Bool} s.t. V:Rat > 40000000 implies O1:Aperture == open3 and O2:Aperture =/= close and O3:Aperture =/= close or O2:Aperture == open3 and O1:Aperture =/= close and O3:Aperture =/= close or O3:Aperture == open3 and O1:Aperture =/= close and O2:Aperture =/= close = false) .
	sd f2 := not(amatch {SC:Spillways ; V:Rat ; T:TimeStamp ; AC:Bool} s.t. V:Rat < 10000000 implies openSpillways(SC:Spillways) == 0 = false) .
	sd f3 := not(amatch {SC:Spillways ; V:Rat ; T:TimeStamp ; AC:Bool} s.t. V:Rat >= 10000000 and V:Rat <= 40000000 implies openSpillways(SC:Spillways) == 2 = false) .
endsm
