load container.maude	---Load files containing the original definitions.

***(
	Generated by STRASS -- Daniel Gal√°n <dagapas@vrain.upv.es>, 2021
)

--- Notice: extended by STRASS, not the original definition
mod EMPTY is
	including BOOL .
	protecting EXT-BOOL .
endm

smod CONTAINER-STRAT is
	protecting CONTAINER .
	protecting EMPTY .
	strat Cargo : @ Cargo .
	strat Cargo! : @ Cargo .
	strat Cargo* : @ Cargo .
	strat Cargo+ : @ Cargo .
	strat Fleet : @ Fleet .
	strat Fleet! : @ Fleet .
	strat Fleet* : @ Fleet .
	strat Fleet+ : @ Fleet .
	strat State : @ State .
	strat State! : @ State .
	strat State* : @ State .
	strat State+ : @ State .
	strat f0 : @ Container .
	strat f1 : @ Ship .
	strat f2 : @ Cargo .
	strat f3 : @ Ship .
	sd Cargo := (f2) ; (f0) .
	sd Cargo! := (Cargo) ; (((all) ; (Cargo)) !) .
	sd Cargo* := (Cargo) ; (((all) ; (Cargo)) *) .
	sd Cargo+ := (Cargo) ; (((all) ; (Cargo)) +) .
	sd Fleet := (f2) ; ((f1) ; (f3)) .
	sd Fleet! := (Fleet) ; (((all) ; (Fleet)) !) .
	sd Fleet* := (Fleet) ; (((all) ; (Fleet)) *) .
	sd Fleet+ := (Fleet) ; (((all) ; (Fleet)) +) .
	sd State := (f2) ; ((f0) ; ((f1) ; (f3))) .
	sd State! := (State) ; (((all) ; (State)) !) .
	sd State* := (State) ; (((all) ; (State)) *) .
	sd State+ := (State) ; (((all) ; (State)) +) .
	sd f0 := not(amatch c(W:Int) s.t. W:Int >= 0 and W:Int <= 5 = false) .
	sd f1 := not(amatch < MAXW:Int, MAXS:Int | CG:Cargo > s.t. weight(CG:Cargo) <= MAXW:Int and size(CG:Cargo) <= MAXS:Int = false) .
	sd f2 := not(amatch CG1:Cargo, c(W:Int), CG2:Cargo s.t. isFull(c(W:Int)) implies isFull(CG1:Cargo) = false) .
	sd f3 := not(amatch < MAXW1:Int, MAXS1:Int | c(W1:Int), c(W1':Int) > s.t. W1:Int >= 0 and W1:Int <= 5 = false) .
endsm
