--- Just a simple nondeterministic dam controller

***( Version without explicit mutual exclusion:
    This version does not implement the desired mutual exclusion required 
    between the update of the contained volume and the execution of effectful 
    commands such as open or close, and thus does not feature a flag 
    `ApertureCommand?` or a `nocmd` rule.

    Instead, the expected mutual exclusion is enforced using a feature of STRASS
    called "path assertions". Namely, in the next step the following path
    assertion will be included in the safety policy:
        path for State: all-except(volume), volume

    This shows how STRASS can be used to enforce complex behaviors by overlaying
    an adequate safety policy, instead of creating ad-hoc modifications of the
    programs of interest.
)

--- Rationals are needed to model basin water volume and 
--- its related parameters (e.g., inflow, outflow)
mod DAM-CONTROLLER-NAIVE is
    protecting RAT . 

    sorts SpillwayId Aperture Spillway Spillways DamState TimeStamp .
    subsort Spillway < Spillways .
    subsort Nat < TimeStamp . --- we consider a Discrete time domain modeled by the set of natural numbers.
    sort State .

    --- We assume our dam is provided with three spillways called s1, s2 and s3 
    --- (albeit this code can work with an arbitrary number of spillways provided their IDs are declared below)
    ops s1 s2 s3 : -> SpillwayId [ctor] .

    --- We consider 4 kinds of spillway openings of increasing discharge capacity
    ops close open1 open2 open3 : -> Aperture [ctor] .

    --- A spillway is a pair (spillwayId,aperture).
    op `[_`,_`] : SpillwayId Aperture -> Spillway [ctor] .

    --- We consider a multiset of spillways with identity empty (that is, empty represents an empty multiset of spillways)
    op empty : -> Spillways [ctor] . 
    op __ : Spillways Spillways -> Spillways [ctor assoc comm id: empty] .

    vars T T1 T2 : TimeStamp .

    --- This operator checks whether a given time stamp falls in a given time interval 
    --- op _ in[_`,_`] : TimeStamp TimeStamp TimeStamp -> Bool .
    op _ in [_`,_`] : TimeStamp TimeStamp TimeStamp -> Bool .
    eq T in [T1,T2] = T >= T1 and T <= T2 .

    --- A term of sort State is a triple [spillways, volume, timestamp] where spillways is a multiset 
    --- of spillways and volume is the basin volume at the time instant timetamp.
    op `{_;_;_`} : Spillways Rat TimeStamp -> State .  

    var S : SpillwayId .
    vars O1 O2 O3 : Aperture .
    vars V V' H : Rat .
    var SC : Spillways .
    var B : Bool .

    --- The following rules changes the opening configuration of a given spillway.
    --- Note that these rules are instantaneous and thus do not change the basin volume. 
    --- We consider the following aperture commands:
    ---    * open
    ---    * close
    --- The aperture command open (resp. close) defines
    --- an increasing (resp. decreasing) spillway discharge capacity policy. 
        
    rl [openC-1] : { [S,close] SC ; V ; T } => { [S,open1] SC ; V ; T } .
    rl [open1-2] : { [S,open1] SC ; V ; T } => { [S,open2] SC ; V ; T } .
    rl [open2-3] : { [S,open2] SC ; V ; T } => { [S,open3] SC ; V ; T } .

    rl [close1-C] : { [S, open1] SC ; V ; T } => { [S,close] SC ; V ; T } .
    rl [close2-1] : { [S, open2] SC ; V ; T } => { [S,open1] SC ; V ; T } .
    rl [close3-2] : { [S, open3] SC ; V ; T } => { [S,open2] SC ; V ; T } .

    --- Constant operator deltaT defines the time interval between two aperture commands.
    --- (Note: in "A Practical use of model checking for synthesis: generating a dam controller for flood management", this value is called d_cmd.)
    op deltaT : -> TimeStamp .
    eq deltaT = 5 .

    --- We assume that the environmental inflow has a constant rate of 2000 m^3/min.
    op inflow : -> Rat . 
    eq inflow = 2000 .

    --- Spillway outflow depends on its opening position (aperture).
    op aperture : Aperture -> Rat .
    eq aperture(close) = 0 .
    eq aperture(open1) = 200 .
    eq aperture(open2) = 400 .
    eq aperture(open3) = 1200 .

    var O : Aperture .  

    --- Spillway outflow computation can be lifted to outflow of multisets of spillways. 
    op outflow : Spillways -> Rat .
    eq outflow(empty) = 0 .
    eq outflow([S,O] SC) = aperture(O) + outflow(SC) .

    --- The volume rule models the basin volume variation in time interval [T,T+deltaT] depending on the outflow of the spillways and the inflow capacity.
    --- Assumption: 1 time unit corresponds to 1 minute.
    --- Note that the application of volume is in mutal exclusion with the application of 
    --- any close/open rule. In other words, the open/close rules and the volume rule cannot be applied concurrently: 
    --- either an aperture command is executed or the basin volume modification w.r.t. the current spillways 
    --- configuration is observed.
    --- This is enforced in the next step by specifying a path assertion.
    crl [volume] :  { SC ; V ; T } => { SC ; V' ; (T + deltaT) }  
                                    if V' := (V + inflow * deltaT) - (outflow(SC) * deltaT) .
endm